{
    "version": "https://jsonfeed.org/version/1",
    "title": "陈布衣的博客",
    "description": "",
    "home_page_url": "http://buyi.dev",
    "items": [
        {
            "id": "http://buyi.dev/2025/ffmpegui/",
            "url": "http://buyi.dev/2025/ffmpegui/",
            "title": "我的 FFMPEG UI",
            "date_published": "2025-09-25T06:34:09.000Z",
            "content_html": "<p>我试用了几个 FFMPEG 的 gui 软件，发现他们都不能做到套着文件夹结构进行转码工作。<br>比如我有一些图片文件，结构化的分布在多个层级的文件夹里，他们就做不到什么结构进去，什么结构出来。<br>对这些一般般的 GUI 来说，他们只能统一输出到另外一个地方。<br>就算可以输出到原文件夹，也会给文件名加上奇奇怪怪的后缀。<br>而且这些 GUI 的操作手感都不好。   </p>\n<p>最初我还可以用 ps1 写脚本糊弄一下，后面用的越来越频繁。我就自己做了一个简易轮子。<br>支持什么文件夹结构进，什么文件夹结构出。<br>参数全靠自己写。然后保存成模板。<br>也没有转码进度显示，就是个纯粹的 .bat 生成和呼叫工具。   </p>\n<p>源码：<br><a href=\"https://github.com/chenbuyi2019/BuyiFFmpegUI\">https://github.com/chenbuyi2019/BuyiFFmpegUI</a>   </p>\n<p>截图：<br><img src=\"/image/ffmpegui.webp\">   </p>\n<p>我记得我用了某某软件，他就死脑筋的单线程转码一堆图片，<br>然后比如说我要转码到 webp 。但是有 1.jpg 和 1.png 同时存在，<br>他会转码到半路上，才会报错 1.webp 已经存在，然后也进行不下去了，半途而废了。<br>我的 UI 会只转码修改时间最新的那个，并且开始工作的时候就已经会提出警报了。   </p>\n<p>我还试用过另外一个开源 GUI ，他那个多任务同时管理有 BUG ，我同时多开一点就报错到死掉。太笨了，我也懒得给他发 issue 。<br>而我这个简简单单，多少个任务同时进行，就生成多少个 .bat 文件，然后同时把他们运行起来就完事了。<br>如果有安装 windows Terminal 可嵌入到一个窗口里的多个标签页。<br>cmd 窗口的标题会显示一个简易的进度。   </p>\n",
            "tags": [
                "code",
                ".net"
            ]
        },
        {
            "id": "http://buyi.dev/2025/postmarks-km/",
            "url": "http://buyi.dev/2025/postmarks-km/",
            "title": "集齐了昆明14个区县的邮戳",
            "date_published": "2025-07-02T05:28:22.000Z",
            "content_html": "<p>我是一个昆明人，我自豪。<br>昆明一共有14个区县，每个我都去了一趟，并盖戳留念。   </p>\n<p><img src=\"/image/postmarks_km.webp\">  </p>\n",
            "tags": []
        },
        {
            "id": "http://buyi.dev/2025/yzgz/",
            "url": "http://buyi.dev/2025/yzgz/",
            "title": "制作遗嘱公证的经历",
            "date_published": "2025-03-12T08:03:34.000Z",
            "content_html": "<p>布衣在几个月之前制作了一份遗嘱公证，公证费花了一千多。<br>下面在此分享一下我制作遗嘱公证的经历。</p>\n<p>布衣制作公证遗嘱的主要目的，是为了不让血亲拿到我的财富。<br>把我的财富留给我信任的人，而不是打了我骂了我十几年的人。</p>\n<p>我故意拖了几个月才写这篇文章，免得你们以为我想不开了。</p>\n<p>注意，本文不适用于结婚过的人，公证处的人和我说了，<br>理论上，一旦你结婚了，你原来的钱还是你的，结婚后获得的钱都算是“夫妻共同财产”。<br>夫妻共同财产办理遗嘱，可就不是你一个人的事情啦。<br>如果你是离婚了，就带上离婚证吧。希望你没有未结清的财产分割官司。</p>\n<h1 id=\"寻找公证处\"><a href=\"#寻找公证处\" class=\"headerlink\" title=\"寻找公证处\"></a>寻找公证处</h1><p>正规的公证处是在司法机关那边有备案的，<br>所有公证处做了的公证，法院、司法部门可以直接内部查到。</p>\n<p>要明白，公证不等于一劳永逸，<br>公证的内容可能有错、有假、有疏忽，但是法院好查好认，就是方便了你以后打官司。</p>\n<p>找公证处可以直接去 <a href=\"https://www.12348.gov.cn/#/publicies/notarization/notarization\">12348</a> 。<br>然后先打电话问问，办个遗嘱公证要多少钱，几点开门接待之类的。 </p>\n<h1 id=\"钱留给谁的问题\"><a href=\"#钱留给谁的问题\" class=\"headerlink\" title=\"钱留给谁的问题\"></a>钱留给谁的问题</h1><p>分清楚，<br>法定继承人以内的，一律叫继承人。比如父母配偶儿女。<br>法定继承人以外的，一律叫受遗赠人。<br>我就是把财富全部留给受遗赠人。</p>\n<p>有个很大的区别，一旦你死了，有<strong>60天的时间</strong>，<br>继承人如果60日内不主动声明放弃遗产，他自动视为接受遗产。<br>遗赠人如果60日内不主动声明接受，他自动视为放弃。</p>\n<p>也就是说，如果我死了，<br>我父母没主动放弃，我信任的人也没主动来接受，那就等于我白立遗嘱了，钱可以合法给父母了。</p>\n<p>钱怎么分配是个问题，<br>你是要几个人按什么比例分配呢，<br>还是要指定第一人第二人，第一人活着就全给第一人，他死了就全给第二人。</p>\n<p>然后可以指定或不指定一个<strong>遗嘱执行人</strong>，执行人负责执行、监督你遗产的分配。<br>他可以不参与钱的分配。<br>比如你指定朋友A，他负责把钱平分给 B 和 C 。</p>\n<p>你也可以选择把遗产全部给慈善基金。<br>这种情况就一定需要一个执行人，不然谁来把你的钱打给慈善基金呢。<br>如果就烂在银行里面了，遗产最终收归国家所有。</p>\n<p>还有个问题是 <strong>必留份制度</strong>。这是《民法典》里明文要求的。<br>如果你死的时候，你的法定继承人里，比如父母配偶儿女里有人是没有经济来源的，<br>比如你先死了，你父母还活着，还没有收入，也没有养老金。<br>你父母可以提起诉讼，要求“分他一份”。<br>但是基本上我们不考虑这个问题，因为大部分情况下还是他们先死。我也不结婚生子。</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p><strong>身份证、户口簿原件</strong>，<br>如果你拿不出户口簿，可以和公证处争取一下能不能直接给你办。<br>我辛辛苦苦从父母手里迁出户口，就是为了爽这一下。</p>\n<p><strong>财富证明</strong><br>找银行盖章写下定期存款、活期存款、理财基金等（不用冻结的证明）<br>这个盖章证明最好要写姓名、身份证、你的卡号，有发卡行名字更好。<br>银行以外的财富我不知道怎么做，我也没有车或房。</p>\n<p>你最好有足够多的钱可以继承，钱越少办遗嘱的意义越小。</p>\n<p>微信支付宝的余额，我不知道怎么办证明。<br>其他虚拟的，比如QQ号微信号、穿越火线库存，你最好就别写了，<br>你想证明这号是属于你的，还真不容易。<br>总不能跑去腾讯公司给你盖章吧。</p>\n<p><strong>信心</strong><br>你不能看起来像被人逼着受胁迫的，<br>你也不能看起来精神不正常。<br>去公证处的时候穿好一点，要录音录像的。</p>\n<p><strong>充足的时间</strong><br>建议第一次去公证处问清楚，加个电话或微信，<br>然后预约，办个公证要花几个小时的。</p>\n<p><strong>遗赠人的身份证复印件</strong><br>需要提供继承人、受遗赠人的身份证的复印件，我去的公证处说用照片也可以。<br>因为到时候公证要写谁、身份证号码多少，可以拿这个财产。</p>\n<p><strong>遗体骨灰怎么办</strong><br>我就写了个 <em>丧事简办，不准把我的遗体带到浙江</em> 。<br>白纸黑字的写了，死也不会回老家。</p>\n<h1 id=\"办理过程\"><a href=\"#办理过程\" class=\"headerlink\" title=\"办理过程\"></a>办理过程</h1><p>带上这些材料到了公证处，准备办事，告诉工作人员，所有你要说明的情况。<br>工作人员会引导你，问你钱给谁，遗体怎么办。<br>然后为你草拟一份遗嘱，打出来给你看，问你要不要修改。</p>\n<p>一定要仔细看，校对一下每个身份证号码。<br>修改完成之后，这就是你的正式遗嘱了。</p>\n<p>大概就是</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs txt\">我，谁谁谁，身份证多少，<br>今天来订立遗嘱分配的我合法财产。<br>我订立遗嘱时，清醒，没有受欺骗或胁迫。<br>我现在 x 岁，至今未婚。<br><br>我现在有财产多少多少，皆为我合法所得。<br>具体财产有 xx银行，卡号11111， xxxx 元。<br>还有 xx银行，卡号2222， xxxx 元。<br>还有 xx银行，卡号3333， xxxx 元。<br>以最终卡内实际余额为准<br><br>我指定甲，身份证aaaaaa，在我死后接受我的遗产。<br></code></pre></td></tr></table></figure>\n\n<p>然后你同意之后，要做<strong>笔录</strong> ，<br>工作人员会问你，今天为什么来立遗嘱，有人陪同吗，他和你什么关系。<br>你的家庭情况怎么样，是否有无经济来源的家人。<br>为什么选择把钱遗赠给你的朋友而不是家人。<br>之类的问题。<br>笔录会打字记录下来，然后给你看过，也要仔细看，然后有觉得不喜欢的，就要求改。<br>对你自己不利的，就不说或不写，可以没关系。</p>\n<p>接下来是<strong>录音录像</strong>环节。<br>你和两个公证员进入一个房间，房间里有多个摄像头、录音机，<br>刚刚的笔录会重新口头问你一次，你重新说一遍就可以了。<br>所以说，为什么要有自信。<br>因为假如我死后，家里人要来争遗产，<br>到了法院，公证处出示了录音录像，完全可以证明我活着立遗嘱的时候是自信清醒坚决的。</p>\n<p>然后要把遗嘱从头到尾一个字一个字地念一遍，念清楚。包括身份证数字、卡号等。<br>让公证员以及未来看录像的人知道，你是完全清醒知晓的。</p>\n<p>接下来要签字、按手印，也是在录像和公证员面前操作。<br>要按十指的全部手印。<br>如果未来有人拿出遗嘱说你写的提出异议，方便司法鉴定这张纸是不是你写的。</p>\n<p>最后会问你有没有什么话，想对未来的人说，<br>我说：“我来立遗嘱，是因为我受了家暴，我不会你们容忍打了我还拿了我的钱的。”</p>\n<p>遗嘱内容、录音录像在你去世前是保密的，公证处不会向任何人透露遗嘱内容，<br>除非有你的授权或司法部门要求。<br>当时接待我的工作人员说，有一些人立遗嘱就是不和家里人说的，生怕家里人知道。</p>\n<h1 id=\"未来钱变动了怎么办\"><a href=\"#未来钱变动了怎么办\" class=\"headerlink\" title=\"未来钱变动了怎么办\"></a>未来钱变动了怎么办</h1><p>公证遗嘱有个情况就是<strong>金额确定</strong>，<br>比如你立遗嘱的时候财富是50万元，那么你死的时候是150万元。<br>就算你写了“以最终卡里实际余额为准”，可能依然会有问题。<br>因为法院可能觉得 “你的遗嘱只分配了这50万，后面新出来的100万，你没分配”。</p>\n<p>所以当财富有大幅度变动的时候，可以去公证处重新立一份遗嘱。<br>但是一旦立一份遗嘱，就得同时写上声明，老遗嘱作废，<br>而且花的手续费是一模一样多甚至更多，流程是一模一样麻烦。</p>\n<p>我觉得可以采用自书遗嘱和公证遗嘱搭配的方式，<br>比如我还年轻，每5年立一份新的公证的，当中的每1年写次自书遗嘱说明下情况。<br>自书的遗嘱直接模仿格式，写上我现在钱多少，最后写上“按之前xxx号公证遗嘱所述分配给甲乙丙”。<br>但是千万不能写出前后冲突的内容。且一定要注意格式。<br>而且每次写了新自书遗嘱，老的自书要销毁掉。</p>\n<p>假如你改变想法了，觉得要换继承人，该去公证处立新的就立新的，老的也务必带上声明作废。<br>最好保持一贯性，找过一家公证处办事了，以后就都去这个公证处。</p>\n<h1 id=\"人死后怎么做\"><a href=\"#人死后怎么做\" class=\"headerlink\" title=\"人死后怎么做\"></a>人死后怎么做</h1><p>叫你的继承人、受赠人，到公证处，带上身份证和你的死亡证明，声明接受遗产，报上你的遗嘱公证编号。<br>这就相当于又要开一个“接受遗赠”公证了，就是“我接受了你的遗产”的意思。</p>\n<p>公证处的人和我说的就是这么个意思。<br>这个具体怎么做，真得我死了才知道了。</p>\n<p>至于能不能顺利把钱从银行里转出来，银行是否一看公证书就承认，就看未来人的本事了。<br>如果银行直接承认，钱直接取走。<br>不承认，就得起诉银行，法院判了给钱，银行就得给钱。</p>\n",
            "tags": [
                "家庭"
            ]
        },
        {
            "id": "http://buyi.dev/2025/cs2-mdmp-view/",
            "url": "http://buyi.dev/2025/cs2-mdmp-view/",
            "title": "反恐精英2 mdmp 文件里内嵌日志的解读",
            "date_published": "2025-03-01T11:39:04.000Z",
            "content_html": "<p>cs2.exe 崩溃之后，有概率生成 mdmp 文件，之前我只用 Visual Studio 和 windbg 去打开 mdmp 文件。<br>都没有发挥出 mdmp 文件的真实价值。   </p>\n<p>与其打开 Visual Studio 或 windbg 在那瞎猜，不如直接用代码编辑器打开（甚至记事本）。<br>然后搜索文本 <code>Console History (reversed)</code> ，这样就可以看到一大段明文日志。<br>这个日志是新的在前面，老的在后面进行排布的。 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs log\">Console History (reversed)<br><br>2852(200.822541):  FATAL ERROR: attempting to render with error material for &#x27;materials/error.vmat&#x27;<br>2851(200.822512):  FATAL ERROR: attempting to render with error material for &#x27;materials/error.vmat&#x27;<br>2850(200.822495):  FATAL ERROR: attempting to render with error material for &#x27;materials/error.vmat&#x27;<br>2849(200.822487):  FATAL ERROR: attempting to render with error material for &#x27;materials/error.vmat&#x27;<br>2848(200.822467):  FATAL ERROR: attempting to render with error material for &#x27;materials/error.vmat&#x27;<br>2847(200.822231):  Sending Steam API content notification<br>2846(200.822209):  C:\\buildworker\\csgo_rel_win64\\build\\src\\filesystem\\basefilesystem.cpp (7062) : AssertMsg Failed in function CBaseFileSystem::MarkContentCorrupt():<br>Content being marked corrupt.  bMissingFilesOnly = false, pFile specified as &#x27;NULL&#x27;, reason: &#x27;FATAL ERROR: attempting to render with error material for &#x27;materials/error.vmat&#x27;&#x27;<br>2845(200.822203):  Sending Steam API content notification<br></code></pre></td></tr></table></figure>\n\n<p>如上文我们遇到的是 <code>materials/error.vmat</code><br>这是个非常司马的难题，因为 cs2 遇到丢失的 vmat 贴图它不会忽略、也不会在 UI 里告诉你丢失了什么，<br>它只会弹出这个该死的弹窗。<br>然后强制启动 steam 的验证游戏完整性，逼你等上几分钟才能重启游戏。<br>在这里有个比较快的定位丢失文件的办法，就是从 mdmp 提供的日志里查看。<br>从日志的文本里搜索正则 <code>Failed loading resource .+\\.vmat_c</code> 就可以直接看见到底哪个 <code>.vmat_c</code> 丢失了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs log\">2252(194.518007):   [ExG积分商城] 你得到了 4 积分：僵尸通关<br>2251(193.816209):  Failed loading resource &quot;knif/kukri_beast.vmat_c&quot; (ERROR_FILEOPEN: File not found)<br></code></pre></td></tr></table></figure>\n\n<p>在实战中，这个办法的用途也没有想象中的大，针对 error.vmat 难题是够用了。<br>可以快速从玩家闪退提供的文件里找到问题来源。以及一些可能的地图 IO 类导致的服务器崩溃。<br>使用插件特地实现的一些崩溃， mdmp 日志能提供的帮助反而较少。</p>\n",
            "tags": [
                "cs2"
            ]
        },
        {
            "id": "http://buyi.dev/2025/if-with-family-again/",
            "url": "http://buyi.dev/2025/if-with-family-again/",
            "title": "打油诗：假如再和父母住在一起",
            "date_published": "2025-02-25T08:58:35.000Z",
            "content_html": "<p>假如再和父母住在一起，我要剁掉我的双手。<br>因为这是一双会挣钱的手。<br>因为父母说这是一双写字难看，只会打游戏的手。<br>因为父母说这是一双不会种菜，也不会做饭的笨手。<br>（父母没教会我怎么挣钱）</p>\n<p>假如再和父母住在一起，我要砍去我的双脚。<br>因为这是一双学会了骑车的脚。<br>因为这是一双走过南闯过北的脚，是一双体验过自由的脚。<br>因为父母说这是一双只会宅在家里的脚。<br>（父母没教会我骑车，要求我只在老家不去外地）</p>\n<p>假如再和父母住在一起，我要挖去我的双眼。<br>因为这是一双看清父母真相的眼。<br>因为父母说这是一双只会看电子屏幕的眼。</p>\n<p>假如再和父母住在一起，我要砍下我的双耳。<br>因为这是一对听过不同意见的耳。<br>因为父母说这是一对不听话的没用的耳。</p>\n<p>假如再和父母住在一起，我要拔掉我的舌头。<br>因为这是一张说出父母真相的嘴。<br>因为父母说这是一张挑食的嘴。<br>因为父母说这是一张说不出好听的话，只会顶撞长辈的狗嘴。<br>（父母说我狗嘴里吐不出象牙）</p>\n<p>假如再和父母住在一起，我要拔光我的牙齿。<br>因为这是一口没有蛀牙的牙齿。<br>因为这是我努力挣钱之后，一口我投入了几万元，戴了牙套的牙齿。<br>（父母忽视我成年后的牙齿健康。牙套的钱是我自己出的，小时候父母不给我戴牙套）</p>\n<p>假如再和父母住在一起，我要切除我的前脑叶白质。<br>这样就可以成为一个令父母满意的，只会呵呵笑的，不会反抗的，忠实孝顺的奴仆。</p>\n",
            "tags": [
                "家庭"
            ]
        },
        {
            "id": "http://buyi.dev/2024/gmod-ain/",
            "url": "http://buyi.dev/2024/gmod-ain/",
            "title": "GMod 中 NPC AI 路径 ain 文件版本控制问题",
            "date_published": "2024-12-12T06:51:43.000Z",
            "content_html": "<p>半条命2 和 GMod 中的 NPC AI 路径点使用的是 <a href=\"https://developer.valvesoftware.com/wiki/Nodegraph\">Nodegraph</a> 技术，<br>对应的文件是 <a href=\"https://developer.valvesoftware.com/wiki/AIN\">.ain</a> 文件，保存在 <code>maps/graphs</code> 文件夹里。   </p>\n<p>当游戏觉得 .ain 文件版本和 .bsp 地图版本不对应的时候，游戏就会自动根据地图内的 <code>info_node</code> 系列实体生成新的 .ain 文件。<br>就是刚刚进入游戏的时候，会看见 <code>Node graph out of date. Rebuilding...</code> 这句话显示在屏幕上。   </p>\n<p>有一些 mod 作者做的地图没有在地图里放置对应的 node 实体，导致 NPC 无法正常识路。<br>.ain 文件可以脱离于地图内容，直接单独生成。<br>比较好用的 gmod 工具是 <a href=\"https://steamcommunity.com/sharedfiles/filedetails/?id=2004023752\">Nodegraph Editor Expansion</a> 。    </p>\n<p>如果是 workshop 订阅来的 bsp 地图，最简单，<br>只要 .ain 文件存在，它就认。没有文件版本控制问题。   </p>\n<p>如果是裸的 bsp 文件直接放在 maps 文件夹里，<br>gmod 就会以 <strong>文件修改时间</strong> 为基准，决定是否重新建立。<br>就是这么简单粗暴，我还以为是根据文件内部标注的 hash 决定的，结果只是文件修改时间而已。   </p>\n<p>比如我弄了一个 <code>fff.bsp</code> ，需要放在服务器 maps 里，它的贴图没有打包进去。<br>我们把贴图一并打包进去，然后做成 <code>fff.bsp.bz2</code> 放在 CDN 里给玩家下载。   </p>\n<p>这里打包好贴图的 <code>fff.bsp</code> 的文件修改时间就会是我编辑打包的时间，比如说 12月1日。<br><code>fff.bsp</code> 刚好没有 node 实体， <code>fff.ain</code> 是第三方作者做的，我下载来的文件是 12KB， 3月1日 。<br>我发现一进游戏， gmod 就会自动重建 ain 文件， <code>fff.ain</code> 就被覆盖成了一个空白文件，只有 16 Bytes 。   </p>\n<p>解决办法有两个：   </p>\n<p>第一，关闭游戏自动重建，在 <code>server.cfg</code> 或者 <code>autoexec.cfg</code> 里加入 <code>ai_norebuildgraph 1</code> 参数。<br>拆开来读就是  <code>ai no rebuild graph</code><br>这样就以后全部的地图都不会主动新建 .ain 文件了。<br>对独立服务器来说也还行，因为我们可以用本地单人游戏做好的 .ain 复制到服务器。不需要服务器自己建立。   </p>\n<p>第二，修改文件时间。反正时间只是文件系统给文件打的标签而已。<br>只要让 gmod 觉得这个 .ain 的修改时间晚于 .bsp 的修改时间即可。<br>可以把 .bsp 改早，也可以把 .ain 改晚。<br>我们可以用 Powershell 指令快速改时间：   </p>\n<figure class=\"highlight pwsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pwsh\"><span class=\"hljs-comment\"># 修改为当前电脑时间</span><br>(<span class=\"hljs-built_in\">Get-Item</span> <span class=\"hljs-string\">&quot;.\\fff.ain&quot;</span>).LastWriteTime = (<span class=\"hljs-built_in\">Get-Date</span>) <br><span class=\"hljs-comment\"># 修改为任意指定时间。</span><br>(<span class=\"hljs-built_in\">Get-Item</span> <span class=\"hljs-string\">&quot;.\\fff.ain&quot;</span>).LastWriteTime = (<span class=\"hljs-built_in\">Get-Date</span> <span class=\"hljs-string\">&quot;2039-12-19&quot;</span>) <br></code></pre></td></tr></table></figure>\n\n<p>但是不管怎么做，都意味着，我们需要自己备份 .ain 文件，<br>指不定这个游戏又觉得 .bsp 更新了或者没有禁用自动生成参数又给我覆盖了。   </p>\n",
            "tags": [
                "gmod"
            ]
        },
        {
            "id": "http://buyi.dev/2024/toolbar-app/",
            "url": "http://buyi.dev/2024/toolbar-app/",
            "title": "Buyi Toolbar",
            "date_published": "2024-11-15T10:10:56.000Z",
            "content_html": "<p>解决 windows 11 砍掉的任务栏-工具栏功能。<br>支持文件夹嵌套。   </p>\n<p>运行库： .NET Framework 4.8   </p>\n<p>启动办法： 把指定文件夹作为启动项参数的第一个。如果带空格需要带双引号。   </p>\n<p>cmd 启动示例：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmd\"><span class=\"hljs-built_in\">start</span> &quot;&quot; &quot;BuyiToolbar.exe&quot; &quot;C:\\Users\\Buyi\\Apps&quot;<br></code></pre></td></tr></table></figure>\n\n<p>源码： <a href=\"https://github.com/chenbuyi2019/Buyi-Toolbar\">github</a>   </p>\n<p>效果截图：<br><img src=\"/image/buyi_toolbar.webp\">  </p>\n",
            "tags": [
                "code",
                ".net"
            ]
        },
        {
            "id": "http://buyi.dev/2024/cs2-console-fix-pos/",
            "url": "http://buyi.dev/2024/cs2-console-fix-pos/",
            "title": "反恐精英2：控制台飘太远了怎么办",
            "date_published": "2024-11-04T10:33:15.000Z",
            "content_html": "<p>该死的 Valve ，如果你在使用 Counter-Strike 2 的控制台的时候，<br>不小心拖拽控制台窗口拖到了游戏界面的外面去。<br>尤其是最顶上或者最下面。<br>你就很可能再也拖拽不回来了。    </p>\n<p>解决办法：<br>先关闭游戏，<br>找到自己的 steam 好友编码，<br>然后去 <code>steam安装目录/userdata/好友编码/730/local/cfg</code> 这个文件夹，<br>找到 <code>cs2_machine_convars.vcfg</code> 这个配置文件，用代码编辑器或记事本打开。  </p>\n<p>在里面搜索 <code>panorama_console_position_and_size</code> ，找到后把这一行删掉，保存修改。<br>因为这一行是存储着控制台的位置和大小。   </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cfg\">&quot;panorama_console_position_and_size&quot;\t\t&quot;253.20|-22.80|1052.40|300.00&quot;<br></code></pre></td></tr></table></figure>\n\n<p>现在重启游戏，就是恢复默认的控制台大小了。   </p>\n",
            "tags": [
                "cs2"
            ]
        },
        {
            "id": "http://buyi.dev/2024/year3/",
            "url": "http://buyi.dev/2024/year3/",
            "title": "离家出走3.5年的感慨",
            "date_published": "2024-10-03T12:51:36.000Z",
            "content_html": "<p>不知不觉又过了一年。<br>上一篇： <a href=\"/2023/year2/\">离家出走2.5年的感慨</a>    </p>\n<h1 id=\"啃老是不对的\"><a href=\"#啃老是不对的\" class=\"headerlink\" title=\"啃老是不对的\"></a>啃老是不对的</h1><p>如果这个人要求先打游戏过舒服日子，也不去上班，就靠啃老（生活费）。<br>那大家会嫌弃他，觉得他的父母应该教育他，甚至打他。   </p>\n<p>如果这个人要求先考研读研或者出国留学，也不去上班，就靠啃老（上学的开支）。<br>那大家可能会嫌弃他，觉得他的父母太溺爱，应该让子女自己解决成年毕业后的开支。   </p>\n<p>如果这个人要求先变装和做变性手术，也不去上班，就靠啃老（变性手术费）。<br>大家会说是这个父母不支持子女的理想，是父母想控制子女。   </p>\n<p>说实话我觉得这很搞笑。    </p>\n<h1 id=\"注意权力的来源\"><a href=\"#注意权力的来源\" class=\"headerlink\" title=\"注意权力的来源\"></a>注意权力的来源</h1><p>那些“暴力机构”，比如非正规的矫正机构、网瘾治疗学校、不良少年教育夏令营。<br>或者比如正规的精神病医院强制住院。   </p>\n<p>所有这些“暴力机构”，都有一个前提，就是有人付钱。<br>如果你家人不付钱给这些暴力机构，人家才懒得管你呢。   </p>\n<p>看准了，谁才是你真正的敌人。   </p>\n<p>当然了，很可惜，很多受害者，宁可起诉那些机构那些教官，也不起诉自己父母。   </p>\n<p>新闻：<a href=\"https://m.weibo.cn/status/Oyub2hgvP\">被父母送精神病院接收7次电击治疗，一位跨性别者决定起诉医院</a>   </p>\n<p>我对这个事情的评价是：<br>为什么就不能先养活自己搬出去住，再考虑女装和变性呢？<br>我看见的所有悲伤的例子都是把女装和变性放在前面，养活自己放在后面，<br>住在父母身边还渴望父母供你变性。<br>明知道自己不传统，却又渴求传统的支持。这好吗？   </p>\n<h1 id=\"通过“和谈”，我拿到了省会户口\"><a href=\"#通过“和谈”，我拿到了省会户口\" class=\"headerlink\" title=\"通过“和谈”，我拿到了省会户口\"></a>通过“和谈”，我拿到了省会户口</h1><p>户口都迁出来了，我和我父母都不是一个户口簿的人了。<br>我现在是省会城市的常住人口了，不是乡下来的流动人口了。<br>我有自己一个户口簿，户主就是我自己。<br>以后我就是办身份证、出国、考证甚至结婚都不需要父母同意了。（我不想结婚）   </p>\n<p>我很爱这个城市，<br>在这我有了工作收入，我献过了血，有了积蓄，<br>有了自己的门牌号，有了安全感，<br>还学会了骑自行车和电动车，有了自己的自行车，<br>还参与了政府安排的免费体检。    </p>\n<p>很感谢政府和每个帮助我的人。   </p>\n<p>当然迁户口，是需要拿到老户口簿的，我和我的家人进行了一定程度的“和谈”。<br>在保证了我的绝对安全的情况下，我让他们把户口簿寄过来到代收地址的。<br>我当然不会允许血亲靠近我，他们要是敢来，我就做点不一样的。   </p>\n<p>我的安全屋，永不欢迎任何和我算家属或亲戚的人。   </p>\n<p>而且这让我离家出走的状态产生了一定微妙的变化。<br>我现在住在派出所看过的承认的合法住所里，身份证上都写着我现在住的地方，<br>某种意义上就不是离家出走了，我一直在家。    </p>\n<p>当然我依然会说我现在是离家出走，因为没有家人不能叫家。有了家人就有家庭暴力。   </p>\n<p>我要继续做一个好市民，做好自己应该做的。   </p>\n<h1 id=\"注意安全\"><a href=\"#注意安全\" class=\"headerlink\" title=\"注意安全\"></a>注意安全</h1><p>生命和财产安全是非常重要的。<br>和网友见面的时候要选择有监控的公共场合，比如餐厅、地铁站。   </p>\n<p>不要轻易借给别人钱。如果这个朋友会因为不借钱就嫌弃你，他就不配做你的朋友。<br>反之，如果要找别人借钱，思考一下为什么要给别人添麻烦，这钱是非借不可吗。   </p>\n<p>骗子还是很多的。<br>既然我遇到过，我朋友也遇到过，我们也都损失过。   </p>\n<h1 id=\"找工作好难\"><a href=\"#找工作好难\" class=\"headerlink\" title=\"找工作好难\"></a>找工作好难</h1><p>是啊，好难。如果我突然失业或者辞职，重新开始找工作，也估计很难找到合适的新工作。   </p>\n<p>我有两个好朋友，都是经人介绍去了乡下的地方上班。<br>唉，就是那种只能住宿舍，下班也是只能在厂区及周边的工作。<br>这样，你下班之后可能就会很压抑，你喝个奶茶都可能困难，更别提偶尔想吃顿麦当劳了。    </p>\n<p>虽然说可能是娇生惯养了一点，但是我小时候就住在没有麦当劳，没有大医院，没有方便交通的小县城里。<br>来了大城市我才明白，人不用做那些苦力农活，也是能活得很好的，很幸福的。<br>当你在大城市大医院排队嫌慢的时候，想想那些还有从乡下坐大巴赶上来看病的，你比他们幸福多了。  </p>\n<p>找工作我个人还是觉得，能不跑远就不跑远吧。<br>有的人可能还是更喜欢乡下，那也是可以的，乡村也有乡村的好，比如物价更低房价更低。   </p>\n",
            "tags": [
                "家庭"
            ]
        },
        {
            "id": "http://buyi.dev/2024/cs2-client-log-parse/",
            "url": "http://buyi.dev/2024/cs2-client-log-parse/",
            "title": "反恐精英2：我是怎么掉线的",
            "date_published": "2024-09-16T09:38:58.000Z",
            "content_html": "<p>司马 Valve 给 Counter-Strike 2 更新了个啥玩意之后，玩家从服务器掉线就不知道理由了。<br>本来应该写掉线理由的框变成了个空白框。   </p>\n<p>特地做此工具，用来解析游戏控制台日志，从而知道掉线给的是啥理由。   </p>\n<p>请在掉线后，全选复制你的控制台日志，然后粘贴到这里，并点击解析。  </p>\n<div>\n\n<textarea id=\"txtInput\">\n</textarea>\n\n<p><button id=\"btnParse\">解析</button></p>\n<div id=\"divResult\">\n</div>\n\n<script src=\"/script/cs2-client-log-parse.js\"></script>\n\n</div>\n\n<p>源码<a href=\"https://github.com/chenbuyi2019/blog2309/blob/master/script/cs2-client-log-parse/main.ts\">点我</a>。   </p>\n",
            "tags": [
                "cs2",
                "code"
            ]
        },
        {
            "id": "http://buyi.dev/2024/mulit-cmd/",
            "url": "http://buyi.dev/2024/mulit-cmd/",
            "title": "ConEmu: 一次性启动和托管多个控制台程序",
            "date_published": "2024-08-25T11:15:48.000Z",
            "content_html": "<p>我写了好多软件都是控制台程序，让它们在 windows 任务栏里晃来晃去不是个好主意。<br>在实际工作中，我需要一个软件来托管这些控制台程序。   </p>\n<p>我选择了 <a href=\"https://conemu.github.io/\">ConEmu</a> 来解决这个问题，我用它来实现：   </p>\n<ol>\n<li>把各个控制台窗口变成标签页</li>\n<li>一次性打开多个控制台程序</li>\n<li>防误触关闭窗口，有个关闭前对话框</li>\n</ol>\n<p>具体就不展开讲了，非常易用的一个控制台 UI 软件。   </p>\n<p>一次性打开多个控制台程序需要使用以下启动参数：   </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmd\">ConEmu64.exe -runlist ^&gt;  <span class=\"hljs-built_in\">cmd</span> /k &quot;D:\\a.exe&quot; ^|^|^| <span class=\"hljs-built_in\">cmd</span> /k &quot;D:\\b.exe&quot; ^|^|^| <span class=\"hljs-built_in\">cmd</span> /k &quot;D:\\c.exe&quot;  <br></code></pre></td></tr></table></figure>\n\n<p><code>cmd /k </code> 的好处是支持在标签页里 ctrl+C 然后保留这个标签页。   </p>\n<p>或者不套 cmd 来执行   </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmd\">ConEmu64.exe -runlist ^&gt; &quot;D:\\a.exe&quot; ^|^|^| &quot;D:\\b.exe&quot; ^|^|^| &quot;D:\\c.exe&quot;  <br></code></pre></td></tr></table></figure>\n\n<p>你说为什么不用 Windows Terminal ，答案是服务器的 windows 不方便安装 windows store app  。<br>而且 ConEmu 还支持把现有的控制台窗口 attach 塞进去。   </p>\n",
            "tags": [
                "code"
            ]
        },
        {
            "id": "http://buyi.dev/2024/gmod-lua-utf8sub/",
            "url": "http://buyi.dev/2024/gmod-lua-utf8sub/",
            "title": "GMod Lua utf8.sub 性能问题",
            "date_published": "2024-08-04T16:00:00.000Z",
            "content_html": "<p>我本来在做一个简易的日志输出，日志字符串达到一定长度之后，就把字符串裁切只留下后面一半。<br>我不经意间使用了 <code>utf8.sub()</code> 来裁，然后我发现游戏过程中莫名其妙就卡顿几十秒，然后就恢复，也不像是我哪里有逻辑死循环。<br>经过反复 <code>print()</code> 来找卡顿的实际位置，我终于找到了原因，就是这个 log 裁切的问题。  </p>\n<p>Gmod Wiki 里说 <a href=\"https://wiki.facepunch.com/gmod/utf8.sub\">utf8.sub()</a> 比较吃性能，不要在逐帧运行的部分里使用。<br>可我没想到你这性能问题这么大啊。   </p>\n<p>下面是测试代码和测试结果：   </p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs lua\">concommand.Add(<br>    <span class=\"hljs-string\">&quot;test1&quot;</span>,<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span><br>        <span class=\"hljs-keyword\">local</span> t1 = SysTime()<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;start&quot;</span>)<br>        <span class=\"hljs-keyword\">local</span> str1 = <span class=\"hljs-string\">&quot;&quot;</span><br>        <span class=\"hljs-keyword\">for</span> i = <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">199</span> <span class=\"hljs-keyword\">do</span><br>            str1 = str1 .. <span class=\"hljs-string\">&quot;甲甲甲abc abc== 123456123 甲甲甲 abc 123456123甲甲&quot;</span><br>        <span class=\"hljs-keyword\">end</span><br><br>        <span class=\"hljs-keyword\">local</span> t2 = SysTime()<br>        <span class=\"hljs-built_in\">print</span>(Format(<span class=\"hljs-string\">&quot;拼字符串 用时 %.3f  文本长度: %d %d&quot;</span>, t2 - t1, #str1, utf8.<span class=\"hljs-built_in\">len</span>(str1)))<br>        <span class=\"hljs-keyword\">local</span> str2 = <span class=\"hljs-built_in\">string</span>.<span class=\"hljs-built_in\">sub</span>(str1, <span class=\"hljs-number\">9999</span>)<br>        <span class=\"hljs-keyword\">local</span> t3 = SysTime()<br>        <span class=\"hljs-built_in\">print</span>(Format(<span class=\"hljs-string\">&quot;string.sub 用时 %.3f  文本长度: %d&quot;</span>, t3 - t2, #str2))<br>        <span class=\"hljs-keyword\">local</span> str3 = utf8.<span class=\"hljs-built_in\">sub</span>(str1, <span class=\"hljs-number\">5000</span>)<br>        <span class=\"hljs-keyword\">local</span> t4 = SysTime()<br>        <span class=\"hljs-built_in\">print</span>(Format(<span class=\"hljs-string\">&quot;utf8.sub 用时 %.3f  文本长度: %d&quot;</span>, t4 - t3, #str3))<br>    <span class=\"hljs-keyword\">end</span><br>)<br><br><span class=\"hljs-comment\">-- 本地单人游戏 intel i7-12650H</span><br><span class=\"hljs-comment\">-- start</span><br><span class=\"hljs-comment\">-- 拼字符串 用时 0.000  文本长度: 11542 8358</span><br><span class=\"hljs-comment\">-- string.sub 用时 0.000  文本长度: 1544</span><br><span class=\"hljs-comment\">-- utf8.sub 用时 10.642  文本长度: 4637</span><br></code></pre></td></tr></table></figure>\n\n<p>8358 个字符（11542 字节）的字符串裁掉一半就要花 10 秒。<br>这也 tmd 太慢了吧。   </p>\n<p><code>string.sub()</code> 是像切割 byte[] 一样切割字符串， <code>utf8.sub()</code> 是先把字符串拆成一个个 utf8 字符，然后再组。<br>非必要不使用，还是老老实实用 <code>string.sub</code> 吧，开头有两个乱码字符没什么大不了的（   </p>\n",
            "tags": [
                "code",
                "gmod"
            ]
        },
        {
            "id": "http://buyi.dev/2024/cs2-player-states/",
            "url": "http://buyi.dev/2024/cs2-player-states/",
            "title": "Counter-Strike 2 玩家进服退服时的状态一览",
            "date_published": "2024-07-21T05:16:06.000Z",
            "content_html": "<p>本文使用的是 CounterStrikeSharp 和 CS2Fixes 搭配进行的研究。<br>用于确定反恐精英2里玩家进出服务器时候的状态。   </p>\n<p>主要还是因为玩家的状态太迷惑了。<br>从连接服务器到进入服务器，再到完成 steam 验证，再到退出服务器，再到重新连接服务器。<br>（玩家退服之后 Controller 实体还在，就很神奇）   </p>\n<p>合理识别这些玩家状态很重要，因为对状态不正常的玩家进行操作会导致出错甚至崩溃。   </p>\n<style>\n    .green {\n        color: green;\n    }\n    .red {\n        color: red;\n    }\n</style>\n\n<p>注意，下表中的 <code>OnClientAuthorized</code> 的顺序位置仅供参考，因为实际中网络不畅时，玩家验证可能很迟才发生。   </p>\n<table style=\"font-size:small;\">\n    <thead>\n    <tr>\n        <td>情况</td>\n        <td>Controller</td>\n        <td>Connected</td>\n        <td>UserId</td>\n        <td>PrintToConsole</td>\n        <td>PlayerPawn</td>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n        <td>第1次进<br>OnClientConnect</td>\n        <td>null</td>\n        <td>无</td>\n        <td>无</td>\n        <td>不测试</td>\n        <td>null</td>\n    </tr>\n    <tr>\n        <td>第1次进<br>OnClientConnected</td>\n        <td>Valid</td>\n        <td>PlayerConnecting</td>\n        <td>0</td>\n        <td>OK</td>\n        <td>null</td>\n    </tr>\n    <tr>\n        <td>第1次进<br>OnClientAuthorized</td>\n        <td>Valid</td>\n        <td>PlayerConnecting</td>\n        <td>0</td>\n        <td>OK</td>\n        <td>null</td>\n    </tr>\n    <tr>\n        <td>第1次进<br>OnClientPutInServer</td>\n        <td>Valid</td>\n        <td>PlayerConnecting</td>\n        <td>0</td>\n        <td>OK</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第1次进<br>OnClientPutInServer<br>之后第1帧</td>\n        <td>Valid</td>\n        <td class=\"green\">PlayerConnected</td>\n        <td>0</td>\n        <td>OK</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第1次退<br>OnClientDisconnect</td>\n        <td>Valid</td>\n        <td class=\"green\">PlayerConnected</td>\n        <td>0</td>\n        <td>执行，但玩家收不到</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第1次退<br>OnClientDisconnectPost</td>\n        <td>Valid</td>\n        <td>PlayerDisconnected</td>\n        <td>0</td>\n        <td>执行，但玩家收不到</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第1次退<br>OnClientDisconnectPost<br>之后第1帧</td>\n        <td>Valid</td>\n        <td>PlayerDisconnected</td>\n        <td>65535</td>\n        <td>执行后服务端崩溃</td>\n        <td>可能是null</td>\n    </tr>\n    <tr>\n        <td>第2次进<br>OnClientConnect</td>\n        <td>Valid</td>\n        <td>PlayerDisconnected</td>\n        <td>0</td>\n        <td>OK</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第2次进<br>OnClientConnected</td>\n        <td>Valid</td>\n        <td>PlayerReconnecting</td>\n        <td>0</td>\n        <td>OK</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第2次进<br>OnClientAuthorized</td>\n        <td>Valid</td>\n        <td>PlayerReconnecting</td>\n        <td>0</td>\n        <td>OK</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第2次进<br>OnClientPutInServer</td>\n        <td>Valid</td>\n        <td>PlayerReconnecting</td>\n        <td>0</td>\n        <td>OK</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第2次进<br>OnClientPutInServer<br>之后第1帧</td>\n        <td>Valid</td>\n        <td class=\"green\">PlayerConnected</td>\n        <td>0</td>\n        <td>OK</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第2次退<br>OnClientDisconnect</td>\n        <td>Valid</td>\n        <td class=\"green\">PlayerConnected</td>\n        <td>0</td>\n        <td>执行，但玩家收不到</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第2次退<br>OnClientDisconnectPost</td>\n        <td>Valid</td>\n        <td>PlayerDisconnected</td>\n        <td>0</td>\n        <td>执行，但玩家收不到</td>\n        <td>Valid</td>\n    </tr>\n    <tr>\n        <td>第2次退<br>OnClientDisconnectPost<br>之后第1帧</td>\n        <td>Valid</td>\n        <td>PlayerDisconnected</td>\n        <td>65535</td>\n        <td>执行后服务端崩溃</td>\n        <td>可能是null</td>\n    </tr>\n    </tbody>\n</table>\n\n<p><code>PrintToConsole</code> 的服务端崩溃表现为：   </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmd\">Fatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.<br><br>   <span class=\"hljs-built_in\">at</span> CounterStrikeSharp.API.Core.Helpers.InvokeNative(IntPtr)<br> <br>   <span class=\"hljs-built_in\">at</span> CounterStrikeSharp.API.Core.ScriptContext.InvokeNativeInternal()<br>   <span class=\"hljs-built_in\">at</span> CounterStrikeSharp.API.Core.ScriptContext.Invoke()<br>   <span class=\"hljs-built_in\">at</span> CounterStrikeSharp.API.Core.NativeAPI.PrintToConsole(Int32, System.String)<br>   <span class=\"hljs-built_in\">at</span> CounterStrikeSharp.API.Core.CCSPlayerController.PrintToConsole(System.String)<br></code></pre></td></tr></table></figure>\n\n<p>总结：  </p>\n<ol>\n<li>玩家控制器就算是 <code>.IsValid</code> ，依然不可靠，需要检测 <code>.Connected</code> 和 <code>.UserId</code> 。  </li>\n<li><code>.PrintToConsole</code> 需要特别小心的使用，BOT 玩家和离线玩家使用这个函数都会导致崩服。   </li>\n<li><code>OnClientPutInServer</code> 可以在大部分情况下使用，作为玩家进服的检测点，但是里面的玩家状态依然不是 <code>PlayerConnected</code> ，它的下一帧才是。</li>\n</ol>\n",
            "tags": [
                "cs2"
            ]
        },
        {
            "id": "http://buyi.dev/2024/ffmpeg-ps1-source/",
            "url": "http://buyi.dev/2024/ffmpeg-ps1-source/",
            "title": "PowerShell 脚本: ffmpeg 批量压缩音频",
            "date_published": "2024-07-14T13:20:03.000Z",
            "content_html": "<p>前置需求：   </p>\n<ul>\n<li>在环境 PATH 路径里有 <a href=\"https://ffmpeg.org/\">ffmpeg</a> 程序  </li>\n<li>使用 <a href=\"https://github.com/PowerShell/PowerShell\">PowerShell 7+</a>  </li>\n<li>我自己是在 Windows 11 运行， Linux 应该也能跑</li>\n</ul>\n<p>我自己经常会遇到打包在不同文件夹结构里的各式音频文件，<br>需要将它们压缩为统一格式的起源、起源2引擎适用的音频格式。<br>所以写了这个脚本。   </p>\n<p>把需要转换的音频文件放入一个文件夹里，<br>把文件夹路径作为脚本的第一个参数执行。一般就是拖入控制台窗口或者拖到ps1图标上直接执行。<br>压缩好的 MP3 会输出到输入文件夹上层的 compress_xxx 文件夹里。<br>里面的子文件夹结构和文件名会保留下来。   </p>\n<p>不得不说，这一下 shell 语法，一下 c# 语法感觉就是怪。  </p>\n<figure class=\"highlight ps1\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ps1\"><span class=\"hljs-variable\">$dir</span> = <span class=\"hljs-variable\">$args</span>[<span class=\"hljs-number\">0</span>]<br><br><span class=\"hljs-variable\">$ErrorActionPreference</span> = <span class=\"hljs-string\">&#x27;Stop&#x27;</span><br><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-operator\">-not</span> (<span class=\"hljs-built_in\">Test-Path</span> <span class=\"hljs-variable\">$dir</span> <span class=\"hljs-literal\">-PathType</span> Container)) &#123;<br>    <span class=\"hljs-built_in\">Write-Error</span> <span class=\"hljs-string\">&quot;你输入的文件夹不存在 <span class=\"hljs-variable\">$dir</span>&quot;</span><br>&#125;<br><br><span class=\"hljs-variable\">$dir</span> = [<span class=\"hljs-type\">System.IO.Path</span>]::GetFullPath(<span class=\"hljs-variable\">$dir</span>)<br><span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">&quot;输入文件夹 <span class=\"hljs-variable\">$dir</span>&quot;</span><br><span class=\"hljs-variable\">$tm</span> = <span class=\"hljs-built_in\">Get-Date</span> <span class=\"hljs-literal\">-Format</span> <span class=\"hljs-string\">&quot;HH-mm-ss&quot;</span><br><span class=\"hljs-variable\">$dir2</span> = [<span class=\"hljs-type\">System.IO.Path</span>]::Combine(<span class=\"hljs-variable\">$dir</span>, <span class=\"hljs-string\">&quot;../&quot;</span>, <span class=\"hljs-string\">&quot;compress_<span class=\"hljs-variable\">$tm</span>&quot;</span>)<br><span class=\"hljs-variable\">$dir2</span> = [<span class=\"hljs-type\">System.IO.Path</span>]::GetFullPath(<span class=\"hljs-variable\">$dir2</span>)<br><span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">&quot;输出文件夹 <span class=\"hljs-variable\">$dir2</span>&quot;</span><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">Test-Path</span> <span class=\"hljs-variable\">$dir2</span> <span class=\"hljs-literal\">-PathType</span> Container) &#123;<br>    <span class=\"hljs-built_in\">Write-Error</span> <span class=\"hljs-string\">&quot;输出文件夹已经存在了，需要更换 <span class=\"hljs-variable\">$dir2</span>&quot;</span><br>&#125;<br><br><span class=\"hljs-variable\">$allowedExt</span> = <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">&quot;.wav&quot;</span>, <span class=\"hljs-string\">&quot;.mp3&quot;</span>, <span class=\"hljs-string\">&quot;.m4a&quot;</span>, <span class=\"hljs-string\">&quot;.mp4&quot;</span>, <span class=\"hljs-string\">&quot;.ogg&quot;</span>)<br><br><span class=\"hljs-variable\">$inputs</span> = <span class=\"hljs-built_in\">Get-ChildItem</span> <span class=\"hljs-variable\">$dir</span> <span class=\"hljs-literal\">-Filter</span> <span class=\"hljs-string\">&quot;*&quot;</span> <span class=\"hljs-literal\">-Recurse</span><br><span class=\"hljs-variable\">$count</span> = <span class=\"hljs-number\">0</span><br><br><span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-variable\">$input</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$inputs</span>) &#123;  <br>    <span class=\"hljs-variable\">$ext</span> = <span class=\"hljs-variable\">$input</span>.Extension.ToLower()<br>    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-variable\">$allowedExt</span>.Contains(<span class=\"hljs-variable\">$ext</span>)) &#123; <span class=\"hljs-keyword\">continue</span> &#125;<br>    <span class=\"hljs-variable\">$relPath</span> = [<span class=\"hljs-type\">System.IO.Path</span>]::GetRelativePath(<span class=\"hljs-variable\">$dir</span>, <span class=\"hljs-variable\">$input</span>.FullName)<br>    <span class=\"hljs-variable\">$outputFile</span> = [<span class=\"hljs-type\">System.IO.Path</span>]::Combine(<span class=\"hljs-variable\">$dir2</span>, <span class=\"hljs-variable\">$relPath</span>)<br>    <span class=\"hljs-variable\">$outputFile</span> = [<span class=\"hljs-type\">System.IO.Path</span>]::ChangeExtension(<span class=\"hljs-variable\">$outputFile</span>, <span class=\"hljs-string\">&quot;.mp3&quot;</span>)<br>    <span class=\"hljs-variable\">$dir3</span> = [<span class=\"hljs-type\">System.IO.Path</span>]::GetDirectoryName(<span class=\"hljs-variable\">$OutputFile</span>)<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-operator\">-not</span> (<span class=\"hljs-built_in\">Test-Path</span> <span class=\"hljs-variable\">$dir3</span> <span class=\"hljs-literal\">-PathType</span> Container)) &#123;<br>        <span class=\"hljs-built_in\">New-Item</span> <span class=\"hljs-variable\">$dir3</span> <span class=\"hljs-literal\">-ItemType</span> Directory<br>    &#125;<br>    <span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-variable\">$outputFile</span> <br>    ffmpeg <span class=\"hljs-literal\">-i</span> <span class=\"hljs-variable\">$input</span>.FullName <span class=\"hljs-literal\">-y</span> <span class=\"hljs-literal\">-c</span>:a libmp3lame <span class=\"hljs-literal\">-ar</span> <span class=\"hljs-number\">44100</span> <span class=\"hljs-literal\">-b</span>:a <span class=\"hljs-number\">96</span>k <span class=\"hljs-variable\">$outputFile</span> <br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-operator\">-not</span>(<span class=\"hljs-built_in\">Test-Path</span> <span class=\"hljs-variable\">$outputFile</span> <span class=\"hljs-literal\">-PathType</span> Leaf)) &#123;<br>        <span class=\"hljs-built_in\">Write-Error</span> <span class=\"hljs-string\">&quot;找不到压缩的音频文件 <span class=\"hljs-variable\">$outputFile</span>&quot;</span><br>    &#125;<br>    <span class=\"hljs-variable\">$count</span> += <span class=\"hljs-number\">1</span><br>&#125;<br><br><span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">&quot;工作完成，一共 <span class=\"hljs-variable\">$count</span> 个文件 &quot;</span><br><span class=\"hljs-built_in\">Write-Host</span> <span class=\"hljs-string\">&quot;输出文件夹 <span class=\"hljs-variable\">$dir2</span>&quot;</span><br><br><span class=\"hljs-comment\"># 批量修改音量： -filter: &quot;volume = 8dB&quot;  </span><br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "cs2",
                "code"
            ]
        },
        {
            "id": "http://buyi.dev/2024/games/",
            "url": "http://buyi.dev/2024/games/",
            "title": "布衣玩通关且没作弊的游戏",
            "date_published": "2024-07-04T12:07:22.000Z",
            "content_html": "<p>记录一下我玩到单人剧情通关，并且没有作弊的游戏。<br>不求高难度也不求百分百全成就全解锁，能不作弊通关已经很开心了（<br>纯剧情解密类就不算了，可以看攻略作弊的（   </p>\n<h1 id=\"Grand-Theft-Auto\"><a href=\"#Grand-Theft-Auto\" class=\"headerlink\" title=\"Grand Theft Auto\"></a>Grand Theft Auto</h1><p>2017 年 4 月 7 日，通关了 GTA 5 。<br>2022 年 1 月 29 日，通关了 GTA 4 本体。<br>2022 年 8 月 17 日，通关了 The Ballad of Gay Tony 。<br>2022 年 10 月 1 日，通关了 The Lost and Damned 。<br>2024 年 7 月 4 日，通关了 GTA III - The Definitive Edition <a href=\"https://m.weibo.cn/status/Om1RkzUwy\">微博</a> 。<br>2024 年 7 月 30 日，通关了 GTA Vice City – The Definitive Edition <a href=\"https://m.weibo.cn/status/OpYfvxpV0\">微博</a>  。<br>2024 年 8 月 20 日，通关了 GTA San Andreas – The Definitive Edition <a href=\"https://m.weibo.cn/status/OtcsQqGa6\">微博</a>  。    </p>\n<h1 id=\"Devil-May-Cry-5\"><a href=\"#Devil-May-Cry-5\" class=\"headerlink\" title=\"Devil May Cry 5\"></a>Devil May Cry 5</h1><p>2022 年 10月 22日。   </p>\n<h1 id=\"ICEY\"><a href=\"#ICEY\" class=\"headerlink\" title=\"ICEY\"></a>ICEY</h1><p>2017 年 8 月 2 日。   </p>\n<h1 id=\"Homefront\"><a href=\"#Homefront\" class=\"headerlink\" title=\"Homefront\"></a>Homefront</h1><p>2021 年 9 月 20 日。  </p>\n<h1 id=\"Max-Payne-3\"><a href=\"#Max-Payne-3\" class=\"headerlink\" title=\"Max Payne 3\"></a>Max Payne 3</h1><p>2021 年 10 月 9 日。   </p>\n<h1 id=\"Red-Alert-2\"><a href=\"#Red-Alert-2\" class=\"headerlink\" title=\"Red Alert 2\"></a>Red Alert 2</h1><p>2023 年 7 月 7 日，红色警戒2 本体 <a href=\"https://m.weibo.cn/status/N8M945xzX\">微博</a><br>2023 年 7 月 12 日，尤里的复仇 苏军线 <a href=\"https://m.weibo.cn/status/N9yHy2Qn7\">微博</a><br>2024 年 8 月 7 日，尤里的复仇 盟军线 <a href=\"https://m.weibo.cn/status/OrdHv3p2N\">微博</a>   </p>\n<h1 id=\"Red-Alert-1\"><a href=\"#Red-Alert-1\" class=\"headerlink\" title=\"Red Alert 1\"></a>Red Alert 1</h1><p>2024 年 1 月 24 日，红色警戒1 苏军线  <a href=\"https://m.weibo.cn/status/NDlcGjaYP\">微博</a><br>2024 年 8 月 27 日，红色警戒1 盟军线  <a href=\"https://m.weibo.cn/status/OufZq8Apg\">微博</a>   </p>\n<h1 id=\"Half-Life-1\"><a href=\"#Half-Life-1\" class=\"headerlink\" title=\"Half-Life 1\"></a>Half-Life 1</h1><p>2023 年 1 月 25 日，<a href=\"https://m.weibo.cn/status/MpXEugiJj\">微博</a>   </p>\n<h1 id=\"Need-For-Speed\"><a href=\"#Need-For-Speed\" class=\"headerlink\" title=\"Need For Speed\"></a>Need For Speed</h1><p>2024 年 7 月 11 日，极品飞车 9 最高通缉 NFS Most Wanted。<br><a href=\"https://m.weibo.cn/status/On4zlaVrf\">微博</a>   </p>\n<h1 id=\"不记得具体时间的\"><a href=\"#不记得具体时间的\" class=\"headerlink\" title=\"不记得具体时间的\"></a>不记得具体时间的</h1><ul>\n<li>Minecraft: Java Edition  </li>\n<li>Devil May Cry 4   </li>\n<li>Hitman: Absolution</li>\n<li>Half-Life 2 </li>\n<li>Half-Life 2: Episode One   </li>\n<li>Half-Life 2: Episode Two  </li>\n<li>Counter-Strike: Condition Zero Deleted Scenes</li>\n<li>Sleeping Dogs: Definitive Edition</li>\n<li>Battlefield 1 </li>\n<li>Battlefield 4</li>\n</ul>\n",
            "tags": [
                "游戏"
            ]
        }
    ]
}